echo            both

#----------------------------------------------#
#-------------- BULK SIMULATION ---------------#
#----------------------------------------------#

# ---------- INPUT ----------
# Molecule data
variable        MolData     string "Decane.TraPPE-UA"	
variable        N           equal 400                   # Nr. of molecules
variable        rho_in      equal 0.4                   # Target density to start with NpT
# Read data
variable        i_ReadData  equal 0                     # 0 - create atoms, 1,2,3,... - read data file
variable        file        string "Bulk_NpT"           # Data file to read (just file ending)
# State point
variable        tmp         equal 373.15
variable        p_MPa       equal 0.1                   # Pressure [MPa]
variable        p_target    equal ${p_MPa}*10
variable        x1          equal 0.5                   # Mole fraction component 1
variable        x2          equal 0.5                   # Mole fraction component 2 ...
# Numerics
variable        dt          equal 0.0005
variable        n_run       equal 4e6                   # NpT run
variable        n_equ       equal 2e6                   # Timesteps before production run (NpT)
variable        n_equ_vol   equal 2e5                   # Timesteps to increase density before equilibration run (NVT) -> recommended: 50 ps hier:100 ps
variable        c_Tdamp     equal 100                   # Suggested by lammps: 100
variable        c_pdamp     equal 1000                  # Suggested by lammps: 1000
# Ensemble string
variable        ensemble    string "NpT"
# Write data
variable        do_set_rho  equal 1                     # Scale total Energy at the end of run
# ---------------------------

# ---------- Simulation setup ---------
variable        norun       equal ${i_ReadData}+1
variable        is_vle      equal 0

# Set simulation conditions
units           metal
atom_style      full

dimension       3
atom_modify     map array
boundary        p p p
neighbor        2 bin
neigh_modify    every 1 delay 0 check yes

# Set timestep
timestep        ${dt}

# Start density and density factor
variable        rho_start equal ${rho_in}/10
variable 		factor_L equal "(density / v_rho_in)^(1/3)"

# Molecule and force field file
include         ${MolData}.inMolData

# Set velocity atoms defined by temperature
if "${i_ReadData} == 0" then    "velocity all create ${tmp} 310"

# ---------- Minimize Eenergy ---------
if "${i_ReadData} == 0" then    "minimize   0.001 1.0e-4 1000 10000"

# -------------- MD NpT ---------------
# NpT/NVT Setup
variable        Tdamp equal ${c_Tdamp}*dt
variable        pdamp equal ${c_pdamp}*dt

# Log File
thermo          1000
thermo_style    custom step atoms vol temp press density etotal pe ke

# Shake Fix
if "${do_shake} == 1" then      "fix        shk all shake 1e-5 100 10000 b 2"

# --- Equilibration ---
# NVT to reduce volume to target density
fix             NVT all nvt temp ${tmp} ${tmp} ${Tdamp}
fix             def all deform 1 x scale ${factor_L} y scale ${factor_L} z scale ${factor_L} remap x
if "${i_ReadData} == 0" then    "run             ${n_equ_vol}"
unfix           def
unfix           NVT

change_box      all x scale ${factor_L} y scale ${factor_L} z scale ${factor_L} remap

# Ensemble Setup
fix             NpT all npt temp ${tmp} ${tmp} ${Tdamp} iso ${p_target} ${p_target} ${pdamp}

# NpT equilibration
run             ${n_equ}

# --- Actual Run ---
reset_timestep  0

# Output
include         in.ThermoOutput

# Get box volume average from NpT run
variable        vol equal vol
fix             mV_box all ave/time 50 20 1000 v_vol ave running

run             ${n_run}

if "${do_shake} == 1" then      "unfix      shk"
unfix           NpT

# Set new box length
variable        factor_L equal "f_mV_box^(1/3)/(lx)"
variable        V_old equal ${vol}
variable        V_new equal f_mV_box
if "${do_set_rho} == 1" then "change_box      all x scale ${factor_L} y scale ${factor_L} z scale ${factor_L} remap"
print           "Old box volume:    ${V_old}"
print           "New box volume:    ${V_new}"
variable        mrho equal density
print           "Density:           ${mrho}"

# Unfixes
unfix           mV_box

# Write Data File
write_data      data.${norun}.Bulk_NpT nocoeff nofix

shell           mv log.lammps log.${norun}.Bulk_NpT